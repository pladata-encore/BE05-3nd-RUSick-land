<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.land.service.LandServiceImplTest$매물시세" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-05-13T07:50:26" hostname="baaam.local" time="0.43">
  <properties/>
  <testcase name="매물시세조회()" classname="com.example.land.service.LandServiceImplTest$매물시세" time="0.403"/>
  <testcase name="내매물시세조회()" classname="com.example.land.service.LandServiceImplTest$매물시세" time="0.026"/>
  <system-out><![CDATA[16:50:22.621 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.land.service.LandServiceImplTest$매물시세]: 매물시세 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
16:50:22.622 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.land.LandApplication for test class com.example.land.service.LandServiceImplTest$매물시세

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2024-05-13T16:50:24.441+09:00  INFO 70469 --- [land] [    Test worker] c.e.land.service.LandServiceImplTest     : Starting LandServiceImplTest using Java 17.0.11 with PID 70469 (started by anhongbeom in /Users/anhongbeom/MSA_RUSick/MSA_RUSick_Land_Land)
2024-05-13T16:50:24.442+09:00  INFO 70469 --- [land] [    Test worker] c.e.land.service.LandServiceImplTest     : The following 1 profile is active: "test"
2024-05-13T16:50:24.456+09:00  INFO 70469 --- [land] [    Test worker] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://localhost:8888
2024-05-13T16:50:24.456+09:00  INFO 70469 --- [land] [    Test worker] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=land, profiles=[default], label=null, version=50c8dd2861fdf9743219b2eeb219233034db7434, state=null
2024-05-13T16:50:24.456+09:00  INFO 70469 --- [land] [    Test worker] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://localhost:8888
2024-05-13T16:50:24.456+09:00  INFO 70469 --- [land] [    Test worker] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=land, profiles=[test], label=null, version=50c8dd2861fdf9743219b2eeb219233034db7434, state=null
2024-05-13T16:50:24.752+09:00  INFO 70469 --- [land] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-13T16:50:24.826+09:00  INFO 70469 --- [land] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 70 ms. Found 3 JPA repository interfaces.
2024-05-13T16:50:24.949+09:00  INFO 70469 --- [land] [    Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=dd66f307-c448-3084-b69d-8e2ecdbf0ff5
2024-05-13T16:50:25.023+09:00  WARN 70469 --- [land] [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-13T16:50:25.024+09:00  WARN 70469 --- [land] [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-13T16:50:25.093+09:00  INFO 70469 --- [land] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-13T16:50:25.117+09:00  INFO 70469 --- [land] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-05-13T16:50:25.131+09:00  INFO 70469 --- [land] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-13T16:50:25.230+09:00  INFO 70469 --- [land] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-13T16:50:25.242+09:00  INFO 70469 --- [land] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-05-13T16:50:25.387+09:00  INFO 70469 --- [land] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7f02b2d4
2024-05-13T16:50:25.389+09:00  INFO 70469 --- [land] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-05-13T16:50:25.843+09:00  INFO 70469 --- [land] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-13T16:50:25.844+09:00  INFO 70469 --- [land] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-13T16:50:25.960+09:00  INFO 70469 --- [land] [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-05-13T16:50:26.281+09:00  WARN 70469 --- [land] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-13T16:50:26.312+09:00 TRACE 70469 --- [land] [    Test worker] eGlobalAuthenticationAutowiredConfigurer : Eagerly initializing {org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration=org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration@1ff9d66b}
2024-05-13T16:50:26.315+09:00  WARN 70469 --- [land] [    Test worker] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: f50eeca0-2729-46a3-8db2-f7d99e4aed8e

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-05-13T16:50:26.445+09:00 DEBUG 70469 --- [land] [    Test worker] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/api/v1/lands']
2024-05-13T16:50:26.452+09:00 DEBUG 70469 --- [land] [    Test worker] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/api/v1/lands/{landid}']
2024-05-13T16:50:26.453+09:00 DEBUG 70469 --- [land] [    Test worker] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/api/v1/lands/price/{landid}']
2024-05-13T16:50:26.453+09:00 DEBUG 70469 --- [land] [    Test worker] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2024-05-13T16:50:26.456+09:00 TRACE 70469 --- [land] [    Test worker] o.s.s.w.a.i.FilterSecurityInterceptor    : Validated configuration attributes
2024-05-13T16:50:26.456+09:00 TRACE 70469 --- [land] [    Test worker] o.s.s.w.a.i.FilterSecurityInterceptor    : Validated configuration attributes
2024-05-13T16:50:26.457+09:00  INFO 70469 --- [land] [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b6846c6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71103416, org.springframework.security.web.context.SecurityContextHolderFilter@34408f1b, org.springframework.security.web.header.HeaderWriterFilter@6852c3d2, org.springframework.web.filter.CorsFilter@503e1cd9, org.springframework.security.web.authentication.logout.LogoutFilter@5622e162, com.example.land.global.utils.JwtAuthenticationFilter@393e6bdd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e6fa551, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@427a4d68, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20b54b6e, org.springframework.security.web.access.ExceptionTranslationFilter@125a6446, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b4b3918]
2024-05-13T16:50:26.643+09:00  INFO 70469 --- [land] [    Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-05-13T16:50:26.663+09:00  WARN 70469 --- [land] [    Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-13T16:50:26.684+09:00  INFO 70469 --- [land] [    Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-05-13T16:50:26.729+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-05-13T16:50:26.731+09:00  INFO 70469 --- [land] [    Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-05-13T16:50:26.742+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-05-13T16:50:26.743+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-05-13T16:50:26.743+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-05-13T16:50:26.743+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-05-13T16:50:26.743+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-05-13T16:50:26.743+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-05-13T16:50:26.743+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-05-13T16:50:26.846+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-05-13T16:50:26.848+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-05-13T16:50:26.849+09:00  INFO 70469 --- [land] [    Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-13T16:50:26.851+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1715586626851 with initial instances count: 3
2024-05-13T16:50:26.853+09:00  INFO 70469 --- [land] [    Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LAND with eureka with status UP
2024-05-13T16:50:26.854+09:00  INFO 70469 --- [land] [    Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1715586626854, current=UP, previous=STARTING]
2024-05-13T16:50:26.854+09:00  INFO 70469 --- [land] [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LAND/land:376aac4b-4a79-4e52-a8bc-9ce9310bbc00: registering service...
2024-05-13T16:50:26.861+09:00  INFO 70469 --- [land] [    Test worker] c.e.land.service.LandServiceImplTest     : Started LandServiceImplTest in 4.217 seconds (process running for 4.758)
2024-05-13T16:50:26.873+09:00  INFO 70469 --- [land] [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LAND/land:376aac4b-4a79-4e52-a8bc-9ce9310bbc00 - registration status: 204
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.land_id=?
Hibernate: insert into lands (land_address,land_area,land_built_date,land_category,land_description,land_detail_address,land_name,land_price,land_yn,owner_id,owner_name,land_id) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into selllogs (land_id,selllog_date,selllog_price,selllog_id) values (?,?,?,?)
Hibernate: update lands set land_address=?,land_area=?,land_built_date=?,land_category=?,land_description=?,land_detail_address=?,land_name=?,land_price=?,land_yn=?,owner_id=?,owner_name=? where land_id=?
Hibernate: select sl1_0.selllog_id,sl1_0.land_id,sl1_0.selllog_date,sl1_0.selllog_price from selllogs sl1_0 left join lands l1_0 on l1_0.land_id=sl1_0.land_id where l1_0.land_id=?
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.land_id=?
Hibernate: insert into lands (land_address,land_area,land_built_date,land_category,land_description,land_detail_address,land_name,land_price,land_yn,owner_id,owner_name,land_id) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into selllogs (land_id,selllog_date,selllog_price,selllog_id) values (?,?,?,?)
Hibernate: update lands set land_address=?,land_area=?,land_built_date=?,land_category=?,land_description=?,land_detail_address=?,land_name=?,land_price=?,land_yn=?,owner_id=?,owner_name=? where land_id=?
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.owner_id=?
Hibernate: select sl1_0.selllog_id,sl1_0.land_id,sl1_0.selllog_date,sl1_0.selllog_price from selllogs sl1_0 left join lands l1_0 on l1_0.land_id=sl1_0.land_id where l1_0.land_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
