<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.land.service.LandServiceImplTest$관심매물" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-05-13T07:50:27" hostname="baaam.local" time="0.048">
  <properties/>
  <testcase name="내관심매물조회()" classname="com.example.land.service.LandServiceImplTest$관심매물" time="0.026"/>
  <testcase name="관심매물등록()" classname="com.example.land.service.LandServiceImplTest$관심매물" time="0.021"/>
  <system-out><![CDATA[2024-05-13T16:50:27.309+09:00  INFO 70469 --- [land] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.example.land.service.LandServiceImplTest$관심매물]: 관심매물 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-05-13T16:50:27.310+09:00  INFO 70469 --- [land] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.example.land.LandApplication for test class com.example.land.service.LandServiceImplTest$관심매물
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.land_id=?
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0 where il1_0.land_id=? and il1_0.user_id=?
Hibernate: insert into lands (land_address,land_area,land_built_date,land_category,land_description,land_detail_address,land_name,land_price,land_yn,owner_id,owner_name,land_id) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into interetst_lands (land_id,user_id,interest_land_id) values (?,?,?)
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0 where il1_0.user_id=?
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.land_id=?
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0 where il1_0.user_id=?
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.land_id=?
삼호진덕
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0 where il1_0.land_id=? and il1_0.user_id=?
Hibernate: insert into lands (land_address,land_area,land_built_date,land_category,land_description,land_detail_address,land_name,land_price,land_yn,owner_id,owner_name,land_id) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into interetst_lands (land_id,user_id,interest_land_id) values (?,?,?)
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0 where il1_0.land_id=? and il1_0.user_id=?
Hibernate: select l1_0.land_id,l1_0.land_address,l1_0.land_area,l1_0.land_built_date,l1_0.land_category,l1_0.land_description,l1_0.land_detail_address,l1_0.land_name,l1_0.land_price,l1_0.land_yn,l1_0.owner_id,l1_0.owner_name from lands l1_0 where l1_0.land_id=?
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0 where il1_0.land_id=? and il1_0.user_id=?
Hibernate: delete from interetst_lands where interest_land_id=?
Hibernate: select il1_0.interest_land_id,il1_0.land_id,il1_0.user_id from interetst_lands il1_0
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
